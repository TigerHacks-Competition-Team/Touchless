[{"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/index.js":"1","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/reportWebVitals.js":"2","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/App.js":"3","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/Components/HomePage.js":"4","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/Components/Menu.js":"5","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/MLModel.js":"6"},{"size":500,"mtime":1607788919815,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607788919817,"results":"9","hashOfConfig":"8"},{"size":3795,"mtime":1607814438989,"results":"10","hashOfConfig":"8"},{"size":178,"mtime":1607791529703,"results":"11","hashOfConfig":"8"},{"size":2462,"mtime":1607811836386,"results":"12","hashOfConfig":"8"},{"size":3454,"mtime":1607812366038,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17uz2mg",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/index.js",[],["29","30"],"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/reportWebVitals.js",[],"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/App.js",["31"],"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/Components/HomePage.js",["32"],"/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/Components/Menu.js",["33"],"import React, { Component } from 'react';\n\nclass Subcategory extends React.Component{\n    render(){\n        return (\n                <div style={styles.subCategoryDiv}>\n                  <button style={styles.menu}\n                          onClick={this.props.onClick}>\n                  {this.props.data.name}</button>\n                    {this.props.toRender && this.props.data.menuItems.map(element => (\n                      <div>\n                        <p style={styles.menuItems}>\n                        {element}\n                        </p>\n                      </div>\n                    ))}\n                </div>\n        );\n    }\n}\n\n\nclass Menu extends React.Component {\n    constructor(props) {\n      super(props);\n        this.state = {\n            renderedSubmenu: 0,\n            data:\n            [\n                {\n                name: \"Breakfast\",\n                menuItems: [\"Pancake\", \"Cheese\"],\n                },\n                {\n                name: \"Lunch\",\n                menuItems: [\"Sandwich\", \"Soup\"],\n                },\n                {\n                name: \"Dinner\",\n                menuItems:[\"Pasta\", \"Chicken\"],\n                }\n\n            ]  \n        }\n    }\n\n    openCategory = (nthCategory) => {\n      let numCategories = this.state.data.length\n      if (nthCategory > numCategories) {\n        console.log(\"Invalid Category\")\n        return\n      }\n      this.setState({\n        renderedSubmenu: nthCategory,\n      })\n      console.log(this.state.renderedSubmenu)\n    }\n  \n    render() {\n    \n          \n      return (\n       <div>\n           <Subcategory data={this.state.data[0]} \n                        toRender={this.state.renderedSubmenu === 0}\n                        onClick={() => this.openCategory(0)}/>\n           <Subcategory data={this.state.data[1]} toRender={this.state.renderedSubmenu === 1}\n                        onClick={() => this.openCategory(1)}/>\n           <Subcategory data={this.state.data[2]} toRender={this.state.renderedSubmenu === 2}\n                        onClick={() => this.openCategory(2)}/>\n       </div>\n      );\n    }\n  }\n\n\nexport default Menu;\n\nconst styles = {\n    subCategoryDiv: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n    },\n    menu: {\n      textAlign: \"center\",\n      color: '#3DC4BB',\n      fontSize: \"1.5em\",\n    },\n    menuItems: {\n        margin: \"2px\",\n        padding: \"1px\",\n        textAlign: \"center\"\n    }\n  }","/Users/ashleyredhead/Documents/WilsonHacks/Touchless/touchless/src/MLModel.js",["34"],"import * as tf from \"@tensorflow/tfjs\";\n\nconst viewPort = [640, 480];\n\nexport default class MLModel {\n  constructor(props) {\n    this.model = props;\n  }\n\n  load = async () => {\n    return new Promise(async (resolve) => {\n      this.model = await tf.loadGraphModel(this.model);\n      resolve();\n    });\n  };\n\n  infer = async (img, maxNumBoxes, minScore) => {\n    tf.setBackend(\"webgl\")\n    img = tf.browser.fromPixels(img);\n    img = tf.image.resizeBilinear(img, [416, 416]);\n    img = img.expandDims(0);\n    let imageData = img.arraySync();\n    img = tf.tensor(imageData, [1, 416, 416, 3], \"int32\");\n    const height = img.shape[1] * (viewPort[1] / 416);\n    const width = img.shape[2] * (viewPort[0] / 416);\n\n    // model returns two tensors:\n    // 1. box classification score with shape of [1, 1917, 90]\n    // 2. box location with shape of [1, 1917, 1, 4]\n    // where 1917 is the number of box detectors, 90 is the number of classes.\n    // and 4 is the four coordinates of the box.\n    console.log(\"this.model: \" + this.model);\n    const result = await this.model.executeAsync(img, [\n      \"detection_scores\",\n      \"detection_classes\",\n      \"detection_boxes\",\n    ]);\n\n    if (result != null) {\n      const scores = result[0].dataSync();\n      const boxes = result[2].dataSync();\n      var clss = result[1].arraySync();\n      clss = clss[0];\n\n      // clean the webgl tensors\n      //batched.dispose();\n      //tf.dispose(result);\n\n      const [maxScores, classes] = this.calculateMaxScores(\n        scores,\n        boxes.length,\n        clss.length\n      );\n\n      const prevBackend = tf.getBackend();\n      // run post process in cpu\n      if (tf.getBackend() === \"webgl\") {\n        tf.setBackend(\"cpu\");\n      }\n      var boxes2 = tf.tensor2d(boxes, [result[2].shape[1], result[2].shape[2]]);\n      const indexTensor = tf.tidy(() => {\n        return tf.image.nonMaxSuppression(boxes2, maxScores, maxNumBoxes);\n      });\n      const indexes = indexTensor.arraySync();\n      indexTensor.dispose();\n\n      // restore previous backend\n      if (prevBackend !== tf.getBackend()) {\n        tf.setBackend(prevBackend);\n      }\n\n      return this.buildDetectedObjects(\n        width,\n        height,\n        boxes2.arraySync(),\n        maxScores,\n        indexes,\n        clss\n      );\n    } else {\n      tf.dispose(result);\n      return [];\n    }\n  };\n\n  buildDetectedObjects = (width, height, boxes, scores, indexes, classes) => {\n    const count = indexes.length;\n    const objects = [];\n    for (let i = 0; i < count; i++) {\n      const bbox = boxes[indexes[i]];\n      const minY = bbox[0] * height;\n      const minX = bbox[1] * width;\n      const maxY = bbox[2] * height;\n      const maxX = bbox[3] * width;\n      bbox[0] = minX;\n      bbox[1] = minY;\n      bbox[2] = maxX - minX;\n      bbox[3] = maxY - minY;\n      objects.push({\n        bbox: bbox,\n        class: classes[indexes[i]],\n        score: scores[indexes[i]],\n      });\n    }\n    return objects;\n  };\n\n  calculateMaxScores = (scores, numBoxes, numClasses) => {\n    const maxes = [];\n    const classes = [];\n    for (let i = 0; i < numBoxes; i++) {\n      let max = Number.MIN_VALUE;\n      let index = -1;\n      for (let j = 0; j < numClasses; j++) {\n        if (scores[i * numClasses + j] > max) {\n          max = scores[i * numClasses + j];\n          index = j;\n        }\n      }\n      maxes[i] = max;\n      classes[i] = index;\n    }\n    return [maxes.slice(0, 100), classes];\n  };\n}\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":13,"nodeType":"41","messageId":"42","endLine":3,"endColumn":15},{"ruleId":"43","severity":2,"message":"44","line":4,"column":15,"nodeType":"41","messageId":"45","endLine":4,"endColumn":20},{"ruleId":"39","severity":1,"message":"46","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"47","line":49,"column":25,"nodeType":"41","messageId":"42","endLine":49,"endColumn":32},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","no-undef","'style' is not defined.","undef","'Component' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]